//SPDX-License-Identifier: MIT
pragma solidity 0.8.12;

import "ds-test/test.sol";
import "forge-std/Vm.sol";

//forge test --match-contract ForkTest --fork-url https://eth-mainnet.alchemyapi.io/v2/7Brn0mxZnlMWbHf0yqAEicmsgKdLJGmA --fork-block-number 14459602 -vvvv
/// https://etherscan.io/tx/0x5cfed0b8664dfbc7bc74d83e4d425ce47ebf13e964c50b51e928f4a88c0b7577

contract ForkTest is DSTest {
    Vm public vm = Vm(HEVM_ADDRESS);
    address EOA = 0x108F0eC0D7F05490b7Fa284de5F1D4b1dfb64Dbf;
    address uniswapV3Router = 0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45;

    function setUp() public {
        vm.label(EOA, "EOA");
        vm.label(uniswapV3Router, "uniswapV3Router");
    }
    function test_Reply() public {
        vm.startPrank(EOA);
        address(uniswapV3Router).call(hex"5ae401dc00000000000000000000000000000000000000000000000000000000623e97d2000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000000e404e45aaf000000000000000000000000f1ca9cb74685755965c7458528a36934df52a3ef000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc20000000000000000000000000000000000000000000000000000000000000bb800000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000114f2d7a46ae3a00000000000000000000000000000000000000000000000000000073261b39ae12a4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004449404b7c0000000000000000000000000000000000000000000000000073261b39ae12a4000000000000000000000000108f0ec0d7f05490b7fa284de5f1d4b1dfb64dbf00000000000000000000000000000000000000000000000000000000");
        vm.stopPrank();
    }
}